{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "approve_ask"
      ],
      "properties": {
        "approve_ask": {
          "type": "object",
          "required": [
            "base",
            "id",
            "size"
          ],
          "properties": {
            "base": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "size": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel_ask"
      ],
      "properties": {
        "cancel_ask": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel_bid"
      ],
      "properties": {
        "cancel_bid": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_ask"
      ],
      "properties": {
        "create_ask": {
          "type": "object",
          "required": [
            "base",
            "id",
            "price",
            "quote",
            "size"
          ],
          "properties": {
            "base": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "price": {
              "type": "string"
            },
            "quote": {
              "type": "string"
            },
            "size": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_bid"
      ],
      "properties": {
        "create_bid": {
          "type": "object",
          "required": [
            "base",
            "id",
            "price",
            "quote",
            "quote_size",
            "size"
          ],
          "properties": {
            "base": {
              "type": "string"
            },
            "fee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Coin"
                },
                {
                  "type": "null"
                }
              ]
            },
            "id": {
              "type": "string"
            },
            "price": {
              "type": "string"
            },
            "quote": {
              "type": "string"
            },
            "quote_size": {
              "$ref": "#/definitions/Uint128"
            },
            "size": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "execute_match"
      ],
      "properties": {
        "execute_match": {
          "type": "object",
          "required": [
            "ask_id",
            "bid_id",
            "price",
            "size"
          ],
          "properties": {
            "ask_id": {
              "type": "string"
            },
            "bid_id": {
              "type": "string"
            },
            "price": {
              "type": "string"
            },
            "size": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "expire_ask"
      ],
      "properties": {
        "expire_ask": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "expire_bid"
      ],
      "properties": {
        "expire_bid": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "reject_ask"
      ],
      "properties": {
        "reject_ask": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "size": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "reject_bid"
      ],
      "properties": {
        "reject_bid": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "size": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "modify_contract"
      ],
      "properties": {
        "modify_contract": {
          "type": "object",
          "properties": {
            "approvers": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            },
            "ask_fee_account": {
              "type": [
                "string",
                "null"
              ]
            },
            "ask_fee_rate": {
              "type": [
                "string",
                "null"
              ]
            },
            "ask_required_attributes": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            },
            "bid_fee_account": {
              "type": [
                "string",
                "null"
              ]
            },
            "bid_fee_rate": {
              "type": [
                "string",
                "null"
              ]
            },
            "bid_required_attributes": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            },
            "executors": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
